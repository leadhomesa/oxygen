{"version":3,"sources":["../../src/input/index.js"],"names":["Input","e","onChange","props","input","cursorBeforeChange","target","selectionStart","valueBeforeChange","value","setTimeout","valueAfterChange","lengthDifference","length","newSelection","setSelectionRange","AddOn","addOn","Affix","affix","Icon","icon","addOnSm","meta","parse","format","disabled","readOnly","showError","showWarning","flexGrow","rest","active","error","React","PureComponent","touched","CurrencyAddon","Currency","ParseInteger","FormatCurrency","MetersSquared","Integer","Year","ParseYear","IntegerOrHalf","ParseIntegerOrHalf","propTypes","PropTypes","object","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AddOnContainer,\n  AffixContainer,\n  Container,\n  ErrorMessage,\n  IconRegion,\n  TextInput\n} from './style';\nimport {\n  FormatCurrency,\n  ParseInteger,\n  ParseIntegerOrHalf,\n  ParseYear\n} from '../parse';\n\nclass Input extends React.PureComponent {\n  static defaultProps = {\n    showError: meta => meta.error && meta.touched,\n    showWarning: meta => meta.error && meta.touched\n  };\n\n  onChange = e => {\n    const {\n      input: { onChange }\n    } = this.props;\n    this.cursorBeforeChange = e.target.selectionStart;\n    this.valueBeforeChange = e.target.value;\n    this.target = e.target;\n\n    setTimeout(() => {\n      const valueAfterChange = this.target.value;\n      const lengthDifference =\n        valueAfterChange.length - this.valueBeforeChange.length;\n      const newSelection = this.cursorBeforeChange + lengthDifference;\n      try {\n        this.target.setSelectionRange(newSelection, newSelection);\n      } catch (e) {\n        // Ignore\n      }\n    }, 0);\n\n    onChange(e);\n    return true;\n  };\n\n  render() {\n    const {\n      addOn: AddOn,\n      affix: Affix,\n      icon: Icon,\n      addOnSm,\n      input,\n      meta = {},\n      parse,\n      format,\n      disabled,\n      readOnly,\n      showError,\n      showWarning,\n      flexGrow,\n      ...rest\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Container\n          warning={showWarning(meta)}\n          active={meta.active}\n          disabled={disabled}\n          flexGrow={flexGrow}\n        >\n          {AddOn && (\n            <AddOnContainer sm={addOnSm}>\n              <AddOn />\n            </AddOnContainer>\n          )}\n\n          <TextInput\n            disabled={disabled}\n            readOnly={readOnly}\n            {...input}\n            {...rest}\n            onChange={this.onChange}\n          />\n\n          {Affix && (\n            <AffixContainer sm={addOnSm}>\n              <Affix />\n            </AffixContainer>\n          )}\n\n          {Icon && (\n            <IconRegion>\n              <Icon />\n            </IconRegion>\n          )}\n        </Container>\n        {showError(meta) && <ErrorMessage>{meta.error}</ErrorMessage>}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Input;\n\nconst CurrencyAddon = () => 'R';\nconst Currency = {\n  addOn: CurrencyAddon,\n  parse: ParseInteger,\n  format: FormatCurrency\n};\n\nconst MetersSquared = {\n  affix: () => '„é°',\n  parse: ParseInteger\n};\n\nconst Integer = {\n  parse: ParseInteger\n};\n\nconst Year = {\n  parse: ParseYear\n};\n\nconst IntegerOrHalf = {\n  parse: ParseIntegerOrHalf\n};\n\nexport {\n  TextInput,\n  Container as TextInputContainer,\n  AddOnContainer,\n  MetersSquared,\n  Currency,\n  Integer,\n  IntegerOrHalf,\n  ErrorMessage,\n  Year\n};\n\nInput.propTypes = {\n  input: PropTypes.object,\n  addOn: PropTypes.func,\n  affix: PropTypes.object,\n  icon: PropTypes.object,\n  addOnSm: PropTypes.bool,\n  meta: PropTypes.object,\n  parse: PropTypes.func,\n  format: PropTypes.func,\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  showError: PropTypes.func,\n  showWarning: PropTypes.func,\n  flexGrow: PropTypes.bool\n};\n"],"file":"index.js"}